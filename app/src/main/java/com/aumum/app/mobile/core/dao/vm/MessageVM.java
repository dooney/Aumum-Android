package com.aumum.app.mobile.core.dao.vm;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 

import com.aumum.app.mobile.core.model.Message;
import com.aumum.app.mobile.core.model.MessageParent;
import com.google.gson.Gson;

/**
 * Entity mapped to table MESSAGE_VM.
 */
public class MessageVM extends BaseVM  {

    private Long id;
    private String fromUserId;
    private String toUserId;
    private Integer type;
    private String content;
    private String parent;

    public MessageVM() {
    }

    public MessageVM(Long id) {
        this.id = id;
    }

    public MessageVM(Long id, String objectId, java.util.Date createdAt, String fromUserId, String toUserId, Integer type, String content, String parent) {
        this.id = id;
        this.objectId = objectId;
        this.createdAt = createdAt;
        this.fromUserId = fromUserId;
        this.toUserId = toUserId;
        this.type = type;
        this.content = content;
        this.parent = parent;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getFromUserId() {
        return fromUserId;
    }

    public void setFromUserId(String fromUserId) {
        this.fromUserId = fromUserId;
    }

    public String getToUserId() {
        return toUserId;
    }

    public void setToUserId(String toUserId) {
        this.toUserId = toUserId;
    }

    public Integer getType() {
        return type;
    }

    public void setType(Integer type) {
        this.type = type;
    }

    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public String getParent() {
        return parent;
    }

    public void setParent(String parent) {
        this.parent = parent;
    }

    private UserVM fromUser;

    public static class Type {
        public static final int DELETED = 0;
        public static final int USER_FOLLOW = 1;
        public static final int PARTY_NEW = 2;
        public static final int PARTY_JOIN = 3;
        public static final int PARTY_QUIT = 4;
        public static final int PARTY_LIKE = 5;
        public static final int PARTY_COMMENT = 6;
        public static final int PARTY_REPLY = 7;
        public static final int PARTY_DELETE = 8;
        public static final int PARTY_CHECK_IN = 9;
    }

    public static class SubCategory {
        public static final int PARTY_MEMBERSHIP = 101;
        public static final int PARTY_COMMENTS = 102;
        public static final int PARTY_LIKES = 103;
    }

    public static class Category {
        public static final int PARTY = 1001;
    }

    private static final String ACTION_OPTIONS[] = {
            "该消息已删除",
            "关注了您",
            "发布了新聚会",
            "报名了聚会",
            "退出了聚会",
            "支持了聚会",
            "发表了聚会评论",
            "回复了聚会评论",
            "删除了聚会",
            "在聚会签到"
    };

    public void setFromUser(UserVM fromUser) {
        this.fromUser = fromUser;
    }

    public UserVM getFromUser() {
        return fromUser;
    }

    public MessageParent getMessageParent() {
        if (parent != null) {
            Gson gson = new Gson();
            return gson.fromJson(parent, MessageParent.class);
        }
        return null;
    }

    public void setParent(MessageParent object) {
        if (object != null) {
            Gson gson = new Gson();
            this.parent = gson.toJson(object);
        }
    }

    public static int[] getSubCategoryTypes(int subCategory) {
        switch (subCategory) {
            case SubCategory.PARTY_MEMBERSHIP:
                return new int[]{ Type.PARTY_JOIN, Type.PARTY_QUIT };
            case SubCategory.PARTY_COMMENTS:
                return new int[]{ Type.PARTY_COMMENT, Type.PARTY_REPLY };
            case SubCategory.PARTY_LIKES:
                return new int[]{ Type.PARTY_LIKE };
        }
        return new int[]{};
    }

    public String getActionText() {
        return ACTION_OPTIONS[type];
    }

    public Message map() {
        Message message = new Message();
        message.setFromUserId(fromUserId);
        message.setToUserId(toUserId);
        message.setType(type);
        message.setContent(content);
        message.setParent(parent);
        return message;
    }
}
